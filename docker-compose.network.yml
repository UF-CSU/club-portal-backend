services:
  app:
    build:
      context: .
      args:
        - DEV=true
    container_name: club-app-network
    volumes:
      - ./app:/app
      - ./scripts:/scripts
      # - static-clubs-network:/vol/web
      - static-clubs-dev:/vol/web
    user: "1000:1000"
    env_file:
      - .env
    environment:
      - PORT=9000
      - CELERY_BROKER_URL=redis://clubs-network-redis:6379/0
      - CELERY_RESULT_BACKEND=redis://clubs-network-redis:6379/0
      - DJANGO_REDIS_URL=redis://clubs-network-redis:6379/1
      - POSTGRES_HOST=postgres-clubs-network
      - CSRF_TRUSTED_ORIGINS=http://localhost:3000
      - DJANGO_BASE_URL=${DJANGO_BASE_URL:-http://localhost:8080}
    depends_on:
      - postgres
    networks:
      - cluster  
    deploy:
      # mode: replicated
      # replicas: 3
      # endpoint_mode: vip

  postgres:
    image: postgres:13-alpine
    command: -c 'max_connections=200'
    container_name: postgres-clubs-network
    volumes:
      # - postgres-clubs-network:/var/lib/postgresql/data
      - postgres-clubs-dev:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=devdatabase
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=devpass
    networks:
      - cluster

  redis:
    image: redis:alpine
    container_name: clubs-network-redis
    # ports:
    #   - 6379:6379
    networks:
      - cluster

  celery:
    build:
      context: .
      # args:
      #   - DEV=true
    restart: unless-stopped
    user: django-user
    command: ['celery', '-A', 'app', 'worker', '--loglevel=info']
    volumes:
      - ./app:/app
      # - static-clubs-network:/vol/web
      - static-clubs-dev:/vol/web
    depends_on:
      - redis
      - postgres
      - app
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://clubs-network-redis:6379/0
      - CELERY_RESULT_BACKEND=redis://clubs-network-redis:6379/0
      - DJANGO_REDIS_URL=redis://clubs-network-redis:6379/1
      - POSTGRES_HOST=postgres-clubs-network
    networks:
      - cluster

  celerybeat:
    build:
      context: .
      # args:
      #   - DEV=true
    user: django-user
    restart: unless-stopped
    command:
      [
        'celery',
        '-A',
        'app',
        'beat',
        '--loglevel=info',
        '--scheduler',
        'django_celery_beat.schedulers:DatabaseScheduler'
      ]
    volumes:
      - ./app:/app
      # - static-clubs-network:/vol/web
      - static-clubs-dev:/vol/web
    depends_on:
      - redis
      - postgres
      - celery
      - app
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://clubs-network-redis:6379/0
      - CELERY_RESULT_BACKEND=redis://clubs-network-redis:6379/0
      - DJANGO_REDIS_URL=redis://clubs-network-redis:6379/1
      - POSTGRES_HOST=postgres-clubs-network
    networks:
      - cluster

    
  mail:
    # Docs: https://mailpit.axllent.org/docs/install/docker/
    # Repo: https://github.com/axllent/mailpit?tab=readme-ov-file
    image: axllent/mailpit
    container_name: mail
    restart: unless-stopped
    volumes:
      - mail-clubs-dev:/data
    ports:
      - 8025:8025
      - 1025:1025
    profiles:
      - dev
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATABASE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1

  proxy:
    build:
      context: ./deploy/proxy/
    container_name: clubs-network-proxy
    ports:
      - 8080:8080
      - 8081:8081
    networks:
      - cluster
    depends_on:
      - app
    volumes:
      # - static-clubs-network:/vol/web
      # - static-clubs:/vol/web
      - static-clubs-dev:/vol/web
    environment:
      - SERVER_URI=club-app-network:9000
      - PROXY_DOCS_URI=${PROXY_DOCS_URI:-''}
      - SERVER_REPLICA_URI=club-app-network:9000

volumes:
  # postgres-clubs-network:
  # static-clubs-network:
  postgres-clubs-dev:
  static-clubs-dev:
  mail-clubs-dev:


networks:
  cluster:
    name: clubs_cluster
    # driver: bridge
