[uwsgi]

master = true                       ; Allow for the creation of worker processes
enable-threads = true               ; Allow uWSGI to work with python threads
vacuum = true                       ; Clean up any temp files
py-call-uwsgi-fork-hooks = true     ; Allows workers to listen for fork hooks (setting to false may cause issues when enable-threads=true)
listen = 300                        ; Socket listen queue size
socket-timeout = 300                ; Timeout (seconds) for internal sockets
# die-on-term = true                  ; Forces uWSGI to stop on SIGTERM (instead of try to restart)
disable-logging = true              ; NGINX handles incomming logs
log-4xx = true                      ; Allow logs for http 400 errors
log-5xx = true                      ; Allow logs for http 500 errors
thunder-lock = true                 ; Creates mutex to assist managing thread resources

# Worker settings
max-requests = 1000                 ; Restart workers after this many requests
max-worker-lifetime = 7200          ; Restart workers after this many seconds
reload-on-rss = 4096                ; Restart workers after this much resident memory
# worker-reload-mercy = 60            ; How long to wait before forcefully killing workers
processes = $(WORKER_COUNT)         ; Max number of workers/processes
cheaper-algo = busyness
cheaper = 5                         ; Minimum number of workers allowed
cheaper-initial = 5                 ; Workers created at startup
cheaper-overload = 1                ; Length of a cycle in seconds
cheaper-step = 10                   ; How many workers to spawn at a time
auto-procname = true                ; Give worker processes names

# Options: https://uwsgi-docs.readthedocs.io/en/latest/Options.html
# Other Resources:
# - Example config: https://www.bloomberg.com/company/stories/configuring-uwsgi-production-deployment/
# - Best practices: https://uwsgi-docs.readthedocs.io/en/latest/ThingsToKnow.html