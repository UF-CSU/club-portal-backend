# Generated by Django 4.2.23 on 2025-08-03 16:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import events.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("events", "0018_alter_event_options_recurringevent_last_synced_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="recurringevent",
            name="prevent_sync_past_events",
            field=models.BooleanField(
                blank=True,
                default=False,
                help_text="When syncing events, should past events be prevented from updating?",
            ),
        ),
        migrations.AlterField(
            model_name="eventattendance",
            name="event",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="attendances",
                to="events.event",
            ),
        ),
        migrations.AlterField(
            model_name="eventattendance",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="event_attendances",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="recurringevent",
            name="event_end_time",
            field=models.TimeField(
                blank=True,
                default=events.models.get_default_end_time,
                help_text="Each event will end at this time, in UTC",
            ),
        ),
        migrations.AlterField(
            model_name="recurringevent",
            name="event_start_time",
            field=models.TimeField(
                blank=True,
                default=events.models.get_default_start_time,
                help_text="Each event will start at this time, in UTC",
            ),
        ),
        migrations.AlterField(
            model_name="recurringevent",
            name="is_public",
            field=models.BooleanField(blank=True, default=True),
        ),
    ]
