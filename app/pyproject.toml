[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
skip = ['migrations']

[tool.coverage.run]
source = ['.']
branch = true

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "if 0:",
    "if __name__ == .__main__.:",
    "if __name__ == '.__main__'.:",
    "if __name__ == \"__main__\":",
    "if __name__ == \"__main__\":",
    "if __name__ == '__main__':",
    "def __str__",
]
fail_under = 100
omit = ['*/migrations/*', '*/tests/*', '*/__init__.py', '*/admin.py', '*/apps.py', '*/urls.py', '*/wsgi.py', '*/settings.py', '*/asgi.py', '*/manage.py',  '*/tests.py', '*/lib/*', '*/mock/*']
sort = "Cover"


[tool.ruff]
target-version = "py313"
exclude = ['migrations', '__pycache__', 'manage.py', 'settings.py']

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "UP045", # Use `X | None` for type annotations
    "UP031", # Allow % symbol for formatting, aligns with django conventions
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true


