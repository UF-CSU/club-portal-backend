# Generated by Django 4.2.23 on 2025-08-10 22:40

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("clubs", "0052_club_is_csu_partner_club_mirror_gatorconnect"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="club",
            options={
                "ordering": ["name", "-id"],
                "permissions": [
                    ("view_club_details", "Can view club details"),
                    ("can_vote", "Can vote"),
                ],
            },
        ),
        migrations.AlterModelOptions(
            name="clubmembership",
            options={
                "permissions": [
                    ("view_executive_clubmembership", "View executive members")
                ]
            },
        ),
        migrations.RemoveConstraint(
            model_name="clubrole",
            name="only_one_default_club_role_per_club",
        ),
        migrations.RemoveConstraint(
            model_name="teamrole",
            name="only_one_default_team_role_per_team",
        ),
        migrations.RenameField(
            model_name="clubrole",
            old_name="default",
            new_name="is_default",
        ),
        migrations.RenameField(
            model_name="teamrole",
            old_name="default",
            new_name="is_default",
        ),
        migrations.AddField(
            model_name="clubmembership",
            name="enable_notifications",
            field=models.BooleanField(
                default=True, help_text="The user get notifications for this club."
            ),
        ),
        migrations.AddField(
            model_name="clubmembership",
            name="order_override",
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="clubrole",
            name="is_executive",
            field=models.BooleanField(
                default=False,
                help_text="Users with this role will be returned when a club's executives are queried.",
            ),
        ),
        migrations.AddField(
            model_name="clubrole",
            name="is_official",
            field=models.BooleanField(
                default=True,
                help_text="Users with this role are counted towards official membership tallies.",
            ),
        ),
        migrations.AddField(
            model_name="clubrole",
            name="is_voter",
            field=models.BooleanField(
                default=False,
                help_text="Users with this role will be marked as able to vote.",
            ),
        ),
        migrations.AddField(
            model_name="team",
            name="show_on_roster",
            field=models.BooleanField(
                default=False, help_text="Show this team on the club's roster."
            ),
        ),
        migrations.AlterField(
            model_name="clubmembership",
            name="is_owner",
            field=models.BooleanField(
                blank=True,
                default=False,
                help_text="Determines whether user is the sole superadmin for the club.",
            ),
        ),
        migrations.AlterField(
            model_name="clubmembership",
            name="is_pinned",
            field=models.BooleanField(
                blank=True,
                default=False,
                help_text="Club is pinned on user's dashboard.",
            ),
        ),
        migrations.AlterField(
            model_name="clubrole",
            name="cached_role_type",
            field=models.CharField(
                blank=True,
                choices=[
                    ("admin", "Admin"),
                    ("editor", "Editor"),
                    ("viewer", "Viewer"),
                    ("follower", "Follower"),
                    ("custom", "Custom"),
                ],
                default=None,
                editable=False,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="clubrole",
            name="role_type",
            field=models.CharField(
                blank=True,
                choices=[
                    ("admin", "Admin"),
                    ("editor", "Editor"),
                    ("viewer", "Viewer"),
                    ("follower", "Follower"),
                    ("custom", "Custom"),
                ],
                default="viewer",
            ),
        ),
        migrations.AlterField(
            model_name="teamrole",
            name="role_type",
            field=models.CharField(
                blank=True,
                choices=[
                    ("admin", "Admin"),
                    ("editor", "Editor"),
                    ("viewer", "Viewer"),
                    ("follower", "Follower"),
                    ("custom", "Custom"),
                ],
                default="viewer",
            ),
        ),
        migrations.AddConstraint(
            model_name="clubrole",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_default", True)),
                fields=("is_default", "club"),
                name="only_one_default_club_role_per_club",
            ),
        ),
        migrations.AddConstraint(
            model_name="teamrole",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_default", True)),
                fields=("is_default", "team"),
                name="only_one_default_team_role_per_team",
            ),
        ),
    ]
